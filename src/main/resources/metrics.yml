  - id: "tablespace/used"
    sql: "select files.tablespace_name, round(((bytes - free_bytes) / maxbytes) * 100, 2) as \" \" from (select tablespace_name, sum(bytes) as bytes, sum(maxbytes) as maxbytes from (select tablespace_name, bytes, case autoextensible when 'YES' then maxbytes else bytes end as maxbytes from dba_data_files) group by tablespace_name) files, (select tablespace_name, sum(bytes) as free_bytes from dba_free_space group by tablespace_name) free where files.tablespace_name = free.tablespace_name order by free.tablespace_name"
    unit: "%"
    enabled: true
    descriptionColumnCount: "1"

  - id: "tablespace/free"
    sql: "select files.tablespace_name, round((100 - ((bytes - free_bytes) / maxbytes) * 100), 2) as \" \"  from (select tablespace_name, sum(bytes) as bytes, sum(maxbytes) as maxbytes from (select tablespace_name, bytes, case autoextensible when 'YES' then maxbytes else bytes end as maxbytes from dba_data_files) group by tablespace_name) files, (select tablespace_name, sum(bytes) as free_bytes from dba_free_space group by tablespace_name) free where files.tablespace_name = free.tablespace_name order by free.tablespace_name"
    unit: "%"
    enabled: true
    descriptionColumnCount: "1"

  - id: "tablespace/bytes"
    sql: "select files.tablespace_name, maxbytes as \"size\", bytes - free_bytes as \"used\", maxbytes - (bytes - free_bytes) as \"avail\" from (select tablespace_name, sum(bytes) as bytes, sum(maxbytes) as maxbytes from (select tablespace_name, bytes, case autoextensible when 'YES' then maxbytes else bytes end as maxbytes from dba_data_files) group by tablespace_name ) files, (select tablespace_name, sum(bytes) as free_bytes from dba_free_space group by tablespace_name) free where files.tablespace_name = free.tablespace_name order by free.tablespace_name"
    unit: "BYTES"
    enabled: true
    descriptionColumnCount: "1"

  - id: "tablespace_max_used"
    sql: "select max(round(((bytes - free_bytes) / maxbytes) * 100, 2)) as \" \" from (select tablespace_name, sum(bytes) as bytes, sum(maxbytes) as maxbytes from (select tablespace_name, bytes, case autoextensible when 'YES' then maxbytes else bytes end as maxbytes from dba_data_files) group by tablespace_name) files, (select tablespace_name, sum(bytes) as free_bytes from dba_free_space group by tablespace_name) free where files.tablespace_name = free.tablespace_name order by free.tablespace_name"
    unit: "%"
    enabled: true
    descriptionColumnCount: "0"

  - id: "sessions"
    sql: "select current_utilization as \"count\", max_utilization as \"highwater mark\", limit_value as \"limit\" from v$resource_limit where resource_name = 'sessions'"
    unit: "sessions"
    enabled: true
    descriptionColumnCount: "0"

  - id: "processes"
    sql: "select current_utilization as \"count\", max_utilization as \"highwater mark\", limit_value as \"limit\" from v$resource_limit where resource_name = 'processes'"
    unit: "processes"
    enabled: true
    descriptionColumnCount: "0"

  - id: "blocking session list"
    sql: "select sid || ',' || serial# || ' blocked by ' || s.blocking_session as \"session\" , s.seconds_in_wait as \" \" from v$session s where blocking_session is not null and s.seconds_in_wait > 60 order by s.seconds_in_wait"
    unit: "sec"
    enabled: true
    descriptionColumnCount: "1"

  - id: "blocking sessions"
    sql: "select count(1) as \" \" from v$session s where s.blocking_session is not null and s.seconds_in_wait > 60"
    unit: "sessions"
    enabled: false
    descriptionColumnCount: "0"

  - id: "recovery area space"
    sql: "SELECT sum(u.PERCENT_SPACE_USED) as \"used space\", sum(u.PERCENT_SPACE_RECLAIMABLE) as \"reclaimable space\" FROM V$RECOVERY_AREA_USAGE u"
    unit: "%"
    enabled: true
    descriptionColumnCount: "0"

  - id: "cache hit ratio"
    sql: "select ((1 - (sum(getmisses) / (sum(gets) + sum(getmisses))))) * 100 as \"hit rate\" from v$rowcache where gets + getmisses <> 0"
    unit: "Hit Rate"
    enabled: true
    descriptionColumnCount: "0"

  - id: "cache hit ratio"
    sql: "select rest.hr \"dictionary cache hit ratio\" from ( select sum(GETS), sum(GETMISSES), round((1 - (sum(GETMISSES) / sum(GETS))) * 100,2) hr from v$rowcache ) rest"
    unit: "%"
    enabled: true
    descriptionColumnCount: "0"

  - id: "cache hit ratio"
    sql: "select round(((1-(sum(decode(name,'physical reads', value,0))/(sum(decode(name, 'db block gets', value,0))+(sum(decode(name, 'consistent gets',value, 0))))))*100),2) \"buffer cache hit ratio\" from v$sysstat"
    unit: "%"
    enabled: true
    descriptionColumnCount: "0"